{"version":3,"sources":["port-config.js","components/DateAndEvents.js","GlobalState.js","components/Calendar.js","components/ThemeToggle.js","components/UtilTabs.js","Reducer.js","App.js","index.js"],"names":["PORT","process","EventDescription","date","events","handleClick","eventList","eventColors","sport","social","outdoors","className","toDateString","onClick","map","event","eventColor","eventType","toLowerCase","key","id","style","backgroundColor","eventName","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","MyApp","useState","eventsToday","setEventsToday","datePicked","dispatch","useEffect","type","newDate","Date","length","fetchEvents","filter","day","month","getDate","getMonth","port_config","axios","get","then","res","data","onChange","minDate","maxDate","DateAndEvents","ThemeToggle","theme","body","document","querySelector","initColor","window","getComputedStyle","newTheme","newColor","state","action","App","UtilTabs","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f76938e4.chunk.js","sourcesContent":["export default {\r\n  // API address\r\n  PORT: process.env.PORT || \"localhost:4000\"\r\n};\r\n","import React from \"react\";\r\nimport \"./Calendar.css\";\r\nimport \"./CalendarComponent.css\";\r\n\r\nconst EventDescription = ({ date, events, handleClick }) => {\r\n  const eventList = events ? events : [];\r\n  const eventColors = {\r\n    sport: \"blue\",\r\n    social: \"pink\",\r\n    outdoors: \"green\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"Calendar-date-column\">\r\n      <div className=\"Calendar-details\">The date and time is: </div>\r\n      <div className=\"Calendar-details\">\r\n        <h3>{date.toDateString()}</h3>\r\n      </div>\r\n      <div className=\"Calendar-details\">\r\n        Your events\r\n        <button onClick={handleClick} className=\"refresh-button\">\r\n          Refresh\r\n        </button>\r\n      </div>\r\n\r\n      {eventList.map(event => {\r\n        const eventColor = eventColors[event.eventType.toLowerCase()];\r\n        return (\r\n          <div\r\n            className=\"Calendar-events\"\r\n            key={event.id}\r\n            style={{ backgroundColor: eventColor }}\r\n          >\r\n            {event.eventName}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDescription;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport port_config from \"../port-config\";\r\nimport axios from \"axios\";\r\nimport \"./Calendar.css\";\r\nimport \"./CalendarComponent.css\";\r\nimport DateAndEvents from \"./DateAndEvents\";\r\nimport { useStateValue } from \"../GlobalState\";\r\n\r\nconst MyApp = () => {\r\n  const name = \"John\";\r\n  const [eventsToday, setEventsToday] = useState();\r\n  const [{ datePicked, events }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    if (!datePicked) {\r\n      dispatch({ type: \"changeDate\", newDate: new Date() });\r\n    }\r\n    if (!events || events.length === 0) {\r\n      fetchEvents();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (events) {\r\n      setEventsToday(\r\n        events.filter(({ day, month }) => {\r\n          return (\r\n            day === datePicked.getDate() && month === datePicked.getMonth()\r\n          );\r\n        })\r\n      );\r\n    }\r\n  }, [events]);\r\n\r\n  const fetchEvents = () => {\r\n    const PORT = port_config.PORT;\r\n    axios.get(`http://${PORT}/users/${name}`).then(res => {\r\n      dispatch({\r\n        type: \"updateEvents\",\r\n        events: res.data.events\r\n      });\r\n    });\r\n  };\r\n\r\n  const onChange = date => {\r\n    dispatch({ type: \"changeDate\", newDate: date });\r\n    if (events) {\r\n      setEventsToday(\r\n        events.filter(({ day, month }) => {\r\n          return day === date.getDate() && month === date.getMonth();\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Calendar\">\r\n      <Calendar\r\n        value={datePicked}\r\n        onChange={onChange}\r\n        minDate={new Date(2001, 0, 1)}\r\n        maxDate={new Date(2050, 11, 31)}\r\n        className={[\"Calendar-component\"]}\r\n      />\r\n      <DateAndEvents\r\n        date={datePicked}\r\n        events={eventsToday}\r\n        handleClick={fetchEvents}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyApp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"../GlobalState\";\r\nimport \"../App.css\";\r\n\r\nconst ThemeToggle = () => {\r\n  const darkTheme = \"rgb(40, 44, 52)\";\r\n  const lightTheme = \"rgb(194, 214, 255)\";\r\n  const [{ theme }, dispatch] = useStateValue(darkTheme);\r\n\r\n  useEffect(() => {\r\n    const body = document.querySelector(\"body\");\r\n    const initColor = window.getComputedStyle(body).backgroundColor;\r\n    if (initColor === \"rgb(40, 44, 52)\") {\r\n      dispatch({ type: \"changeTheme\", newTheme: \"dark\" });\r\n    } else {\r\n      dispatch({ type: \"changeTheme\", newTheme: \"light\" });\r\n    }\r\n  }, []);\r\n\r\n  // Toggle dark/light mode\r\n  const changeBgColor = () => {\r\n    const newColor = theme === \"dark\" ? lightTheme : darkTheme;\r\n    const newTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n    document.body.style.backgroundColor = newColor;\r\n\r\n    dispatch({ type: \"changeTheme\", newTheme });\r\n  };\r\n\r\n  const buttonName = () => {\r\n    return theme === \"dark\" ? \"Switch to light theme\" : \"Switch to dark theme\";\r\n  };\r\n\r\n  return (\r\n    <button onClick={changeBgColor} className=\"theme-toggle\">\r\n      {buttonName()}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import React from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport Calendar from \"./Calendar\";\r\nimport ThemeToggle from \"./ThemeToggle\";\r\n\r\nexport default () => (\r\n  <Tabs>\r\n    <TabList>\r\n      <Tab>Calendar</Tab>\r\n      <Tab>Task List</Tab>\r\n      <Tab>Preferences</Tab>\r\n    </TabList>\r\n\r\n    <TabPanel>\r\n      <Calendar />\r\n    </TabPanel>\r\n    <TabPanel>\r\n      \r\n    </TabPanel>\r\n    <TabPanel>\r\n      <ThemeToggle />\r\n    </TabPanel>\r\n  </Tabs>\r\n);\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"changeTheme\":\r\n      return {\r\n        ...state,\r\n        theme: action.newTheme\r\n      };\r\n\r\n    case \"changeDate\":\r\n      return {\r\n        ...state,\r\n        datePicked: action.newDate\r\n      };\r\n\r\n      case \"updateEvents\":\r\n        return {\r\n          ...state,\r\n          events: action.events\r\n        };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport UtilTabs from \"./components/UtilTabs\";\nimport { StateProvider } from \"./GlobalState\";\nimport reducer from \"./Reducer\";\n\nconst App = () => {\n  const initialState = {\n    theme: \"\",\n    datePicked: new Date(),\n    events: []\n  };\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <div className=\"App\">\n        <header className=\"App-header\">Welcome to QuickUtils&trade;!!</header>\n        <UtilTabs />\n      </div>\n    </StateProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}