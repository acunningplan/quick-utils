{"version":3,"sources":["port-config.js","components/DateAndEvents.js","GlobalState.js","components/Calendar.js","components/TaskList.js","components/ThemeToggle.js","components/Preferences.js","utils.js","components/UtilTabs.js","Reducer.js","components/Navbar.js","App.js","index.js"],"names":["PORT","process","EventDescription","date","events","handleClick","eventList","eventColors","sport","social","outdoors","className","toDateString","Button","onClick","map","event","eventColor","eventType","toLowerCase","key","id","style","backgroundColor","eventName","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","MyApp","useState","eventsToday","setEventsToday","datePicked","dispatch","useReactRouter","history","location","match","useEffect","type","newDate","Date","length","fetchEvents","filter","day","month","getDate","getMonth","port_config","axios","get","then","res","data","onChange","minDate","maxDate","DateAndEvents","ThemeToggle","theme","body","document","querySelector","initColor","window","getComputedStyle","newTheme","newColor","Preferences","utils","UtilTabs","initTabIndex","indexOf","pathname","slice","currentTabIndex","setCurrentTabIndex","onSelect","tabIndex","push","selectedIndex","TaskList","state","action","selectedTab","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","target","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.106f3cde.chunk.js","sourcesContent":["export default {\r\n  // API address\r\n  PORT: process.env.PORT || \"localhost:4000\"\r\n};\r\n","import React from \"react\";\r\nimport \"./Calendar.css\";\r\nimport \"./CalendarComponent.css\";\r\n\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst EventDescription = ({ date, events, handleClick }) => {\r\n  const eventList = events ? events : [];\r\n  const eventColors = {\r\n    sport: \"blue\",\r\n    social: \"pink\",\r\n    outdoors: \"green\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"Calendar-date-column\">\r\n      <div className=\"Calendar-details\">The date and time is: </div>\r\n      <div className=\"Calendar-details\">\r\n        <h3>{date.toDateString()}</h3>\r\n      </div>\r\n      <div className=\"Calendar-details\">\r\n        Your events\r\n        <Button onClick={handleClick} className=\"refresh-button\">\r\n          Refresh\r\n        </Button>\r\n      </div>\r\n\r\n      {eventList.map(event => {\r\n        const eventColor = eventColors[event.eventType.toLowerCase()];\r\n        return (\r\n          <div\r\n            className=\"Calendar-events\"\r\n            key={event.id}\r\n            style={{ backgroundColor: eventColor }}\r\n          >\r\n            {event.eventName}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDescription;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport useReactRouter from \"use-react-router\";\r\nimport port_config from \"../port-config\";\r\nimport axios from \"axios\";\r\nimport \"./Calendar.css\";\r\nimport \"./CalendarComponent.css\";\r\nimport DateAndEvents from \"./DateAndEvents\";\r\nimport { useStateValue } from \"../GlobalState\";\r\n\r\n\r\nconst MyApp = () => {\r\n  const name = \"John\";\r\n  const [eventsToday, setEventsToday] = useState();\r\n  const [{ datePicked, events }, dispatch] = useStateValue();\r\n  const { history, location, match } = useReactRouter();\r\n\r\n  useEffect(() => {\r\n    if (!datePicked) {\r\n      dispatch({ type: \"changeDate\", newDate: new Date() });\r\n    }\r\n    if (!events || events.length === 0) {\r\n      fetchEvents();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (events) {\r\n      setEventsToday(\r\n        events.filter(({ day, month }) => {\r\n          return (\r\n            day === datePicked.getDate() && month === datePicked.getMonth()\r\n          );\r\n        })\r\n      );\r\n    }\r\n  }, [events]);\r\n\r\n  const fetchEvents = () => {\r\n    const PORT = port_config.PORT;\r\n    axios.get(`http://${PORT}/users/${name}`).then(res => {\r\n      dispatch({\r\n        type: \"updateEvents\",\r\n        events: res.data.events\r\n      });\r\n    });\r\n  };\r\n\r\n  const onChange = date => {\r\n    dispatch({ type: \"changeDate\", newDate: date });\r\n    if (events) {\r\n      setEventsToday(\r\n        events.filter(({ day, month }) => {\r\n          return day === date.getDate() && month === date.getMonth();\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Calendar\">\r\n      <Calendar\r\n        value={datePicked}\r\n        onChange={onChange}\r\n        minDate={new Date(2001, 0, 1)}\r\n        maxDate={new Date(2050, 11, 31)}\r\n        className={[\"Calendar-component\"]}\r\n      />\r\n      <DateAndEvents\r\n        date={datePicked}\r\n        events={eventsToday}\r\n        handleClick={fetchEvents}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyApp;\r\n","import React, { useEffect } from \"react\";\r\nimport useReactRouter from \"use-react-router\";\r\n\r\nexport default () => {\r\n  const { history, location, match } = useReactRouter();\r\n\r\n  useEffect(() => {\r\n    \r\n  }, []);\r\n\r\n  return <div>This is the task list.</div>;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"../GlobalState\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"../App.css\";\r\n\r\nconst ThemeToggle = () => {\r\n  const darkTheme = \"rgb(40, 44, 52)\";\r\n  const lightTheme = \"rgb(194, 214, 255)\";\r\n  const [{ theme }, dispatch] = useStateValue(darkTheme);\r\n\r\n  useEffect(() => {\r\n    const body = document.querySelector(\"body\");\r\n    const initColor = window.getComputedStyle(body).backgroundColor;\r\n    if (initColor === \"rgb(40, 44, 52)\") {\r\n      dispatch({ type: \"changeTheme\", newTheme: \"dark\" });\r\n    } else {\r\n      dispatch({ type: \"changeTheme\", newTheme: \"light\" });\r\n    }\r\n  }, []);\r\n\r\n  // Toggle dark/light mode\r\n  const changeBgColor = () => {\r\n    const newColor = theme === \"dark\" ? lightTheme : darkTheme;\r\n    const newTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n    document.body.style.backgroundColor = newColor;\r\n\r\n    dispatch({ type: \"changeTheme\", newTheme });\r\n  };\r\n\r\n  const buttonName = () => {\r\n    return theme === \"dark\" ? \"Switch to light theme\" : \"Switch to dark theme\";\r\n  };\r\n\r\n  return (\r\n    <Button onClick={changeBgColor} className=\"theme-toggle\">\r\n      {buttonName()}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"../GlobalState\";\r\nimport ThemeToggle from \"./ThemeToggle\";\r\nimport useReactRouter from \"use-react-router\";\r\nimport \"../App.css\";\r\n\r\nconst Preferences = () => {\r\n  useEffect(() => {}, []);\r\n\r\n  return <ThemeToggle />;\r\n};\r\n\r\nexport default Preferences;\r\n","const utils = [\"calendar\", \"tasklist\", \"preferences\"];\r\n\r\nexport default utils;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport useReactRouter from \"use-react-router\";\r\nimport Calendar from \"./Calendar\";\r\nimport TaskList from \"./TaskList\";\r\nimport Preferences from \"./Preferences\";\r\nimport { useStateValue } from \"../GlobalState\";\r\nimport utils from \"../utils\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nconst UtilTabs = () => {\r\n  const { history, location, match } = useReactRouter();\r\n  const initTabIndex = utils.indexOf(location.pathname.slice(1));\r\n  const [currentTabIndex, setCurrentTabIndex] = useState(initTabIndex);\r\n\r\n  const onSelect = tabIndex => {\r\n    history.push(`/${utils[tabIndex]}`);\r\n    setCurrentTabIndex(tabIndex);\r\n  };\r\n\r\n  return (\r\n    <Tabs onSelect={onSelect} selectedIndex={currentTabIndex}>\r\n      <TabList>\r\n        <Tab>Calendar</Tab>\r\n        <Tab>Task List</Tab>\r\n        <Tab>Preferences</Tab>\r\n      </TabList>\r\n\r\n      <TabPanel>\r\n        <Calendar />\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <TaskList />\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <Preferences />\r\n      </TabPanel>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default UtilTabs;\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"switchTab\":\r\n      return {\r\n        ...state,\r\n        selectedTab: action.selectedTab\r\n      };\r\n    case \"changeTheme\":\r\n      return {\r\n        ...state,\r\n        theme: action.newTheme\r\n      };\r\n\r\n    case \"changeDate\":\r\n      return {\r\n        ...state,\r\n        datePicked: action.newDate\r\n      };\r\n\r\n      case \"updateEvents\":\r\n        return {\r\n          ...state,\r\n          events: action.events\r\n        };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport useReactRouter from \"use-react-router\";\r\n\r\nexport default () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const { history, location, match } = useReactRouter();\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const onClickPreferences = () => {};\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">QuickUtils</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink\r\n                target=\"_blank\"\r\n                href=\"https://github.com/reactstrap/reactstrap\"\r\n              >\r\n                reactstrap GitHub\r\n              </NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Sign in\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem href=\"/auth/google\">Google</DropdownItem>\r\n                <DropdownItem href=\"/auth/github\">Github</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>Reset</DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport UtilTabs from \"./components/UtilTabs\";\nimport { StateProvider } from \"./GlobalState\";\nimport reducer from \"./Reducer\";\nimport Navbar from './components/Navbar'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport utils from \"./utils\";\n\nconst App = () => {\n  const initialState = {\n    theme: \"\",\n    datePicked: new Date(),\n    events: [],\n    selectedTab: utils[0]\n  };\n\n  return (\n    <Router>\n      <StateProvider initialState={initialState} reducer={reducer}>\n        <Navbar />\n        <div className=\"App\">\n          <header className=\"App-header\">Welcome to QuickUtils&trade;!!</header>\n          <UtilTabs />\n        </div>\n      </StateProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}